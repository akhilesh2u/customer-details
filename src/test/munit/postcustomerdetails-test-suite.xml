<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:postcustomerdetails.xml"/>
        <spring:import resource="classpath:errorhandling.xml"/>
        <spring:import resource="classpath:globalconfigurations.xml"/>
        <spring:import resource="classpath:gmailnotification.xml"/>
    </spring:beans>
    <munit:test name="postcustomerdetails-test-suite-post:/CustomerDetails:application/json:CustomerDetails-configTest" description="Test">
        <mock:when messageProcessor="mongo:insert-object" doc:name="Mock MongoDB">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="Insert MongoDB Object"/>
            </mock:with-attributes>
            <mock:then-return payload="58fd9cb45ed84e83e1097bab"/>
        </mock:when>
        <mock:when doc:name="Mock Gmail" messageProcessor="mule:sub-flow">
            <mock:with-attributes>
                <mock:with-attribute name="name" whereValue="#[matchContains('GmailNotification')]"/>
            </mock:with-attributes>
            <mock:then-return payload="{}"/>
        </mock:when>
        <munit:set payload="{ &quot;customerName&quot; : &quot;Mulesoft Inc&quot;, &quot;customerEmail&quot; : &quot;contactus@mulesoft.com&quot;, &quot;customerContact&quot; : &quot;+447438992726&quot;, &quot;customerAddress&quot;:&quot;Flat 31,48 East Street&quot;, &quot;industry&quot; : &quot;IT Applications&quot; }" doc:name="Set Message" mimeType="application/json"/>
        <flow-ref name="post:/CustomerDetails:application/json:CustomerDetails-config" doc:name="post:/CustomerDetails:application/json:CustomerDetails-config"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-payload>
        </dw:transform-message>
        <munit:assert-on-equals expectedValue="58fd9cb45ed84e83e1097bab" actualValue="#[payload.customerId]" doc:name="Assert Equals"/>
    </munit:test>
</mule>

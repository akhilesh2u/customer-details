<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="get:/CustomerDetails:CustomerDetails-config">
		<set-variable variableName="httpRequest"
			value="#[message.inboundProperties.host]#[message.inboundProperties.'http.request.uri']"
			doc:name="Set HTTP Request" />
		
        <logger message="Prepared the MongoDB Fetch Query for the Customer: #[payload]" level="INFO" doc:name="Logger"/>
		<mongo:find-objects config-ref="Mongo_DB"
			collection="${mongodb.customerdetails.collection}" doc:name="Fetch MongoDB Record" query-ref="#[payload]"/>
		<choice doc:name="Choice">
		            <when expression="#[payload == empty || payload == null || payload == NullPayload]">
		                <dw:transform-message doc:name="Create the No Records Message">
		                    <dw:set-payload><![CDATA[%dw 1.0
		%output application/json
		---
		{
			"message": "No Records Found"
		}]]></dw:set-payload>
		                </dw:transform-message>
		            </when>
            <otherwise>
                <mongo:mongo-collection-to-json doc:name="Mongo DB"/>
            </otherwise>
		        </choice>
        <logger message="Retreived the details for the Customer: #[payload]" level="INFO" doc:name="Logger"/>

	</flow>

    <flow name="get:/CustomerDetails/{CustomerDetailsName}:CustomerDetails-config">
		<set-variable variableName="httpRequest"
			value="#[message.inboundProperties.host]#[message.inboundProperties.'http.request.uri']"
			doc:name="Set HTTP Request" />
		<set-payload
			value="{ &quot;customerName&quot; : &quot;#[message.inboundProperties.'http.uri.params'.CustomerDetailsName ]&quot;}"
			mimeType="application/json" doc:name="Set Payload" />
        <logger message="Prepared the MongoDB Fetch Query for the Customer: #[payload]" level="INFO" doc:name="Logger"/>
		<mongo:find-one-object config-ref="Mongo_DB"
			collection="${mongodb.customerdetails.collection}" doc:name="Fetch MongoDB Record" failOnNotFound="false"/>
		<choice doc:name="Choice">
		            <when expression="#[payload == empty || payload == null || payload == NullPayload]">
		                <dw:transform-message doc:name="Create the No Records Message">
		                    <dw:set-payload><![CDATA[%dw 1.0
		%output application/json
		---
		{
			"message": "No Records Found"
		}]]></dw:set-payload>
		                </dw:transform-message>
		            </when>
            <otherwise>
                <mongo:db-object-to-map doc:name="Mongo DB"/>
            </otherwise>
		        </choice>
        <logger message="Retreived the details for the Customer: #[payload]" level="INFO" doc:name="Logger"/>

    </flow>

</mule>
